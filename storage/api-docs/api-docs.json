{
    "openapi": "3.0.0",
    "info": {
        "title": "News Aggregator API",
        "description": "A RESTful API built with Laravel that aggregates news articles from multiple sources, allowing users to browse, search, and personalize their news feed.",
        "version": "1.0.0"
    },
    "paths": {
        "/api/articles": {
            "get": {
                "tags": [
                    "Article Management"
                ],
                "summary": "Get a list of articles with filtering options",
                "description": "News article listing with filters.",
                "operationId": "11aa4cc6561a7b94c56d1201d62513ee",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of articles per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search articles by keyword",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Filter articles by date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter articles by category(id)",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "Filter articles by source(id)",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of filtered articles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NewsArticle"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/articles/{article}": {
            "get": {
                "tags": [
                    "Article Management"
                ],
                "summary": "Get a specific article",
                "operationId": "4a09e05e36f650b9c54ba9a601b735f9",
                "parameters": [
                    {
                        "name": "article",
                        "in": "path",
                        "description": "ID of the article",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArticleResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Article not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user and return a token",
                "description": "Logs in a user and returns a Bearer token.",
                "operationId": "bc76a9d52929cab7a147ca7b5c527430",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "your-token-here"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "delete": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user and revoke token",
                "description": "Logs out the authenticated user by revoking the token.",
                "operationId": "250045954f07adf40103e33a04e5d715",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send password reset link",
                "description": "Sends a password reset link to the user's email.",
                "operationId": "fd65100a0039097d21dc0ed80153f843",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reset link sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset link sent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to send reset link"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset password",
                "description": "Resets the user's password using a valid token.",
                "operationId": "45bd10d0ed9048f9c0e2efc912f2210c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "reset-token-here"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid token or email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Creates a new user and returns an authentication token.",
                "operationId": "18235ea6963e661c49bf381065779d6a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "your_generated_token_here"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email has already been taken."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/lookup/categories": {
            "get": {
                "tags": [
                    "Lookup"
                ],
                "summary": "Get list of categories",
                "description": "List all categories with pagination.",
                "operationId": "1c13e25c57ac88d6d8b7d34815b26e61",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoryResource"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/lookup/sources": {
            "get": {
                "tags": [
                    "Lookup"
                ],
                "summary": "Get list of sources",
                "description": "List all sources with pagination.",
                "operationId": "12cd4ea2dae7567aca21591c80a480b8",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SourceResource"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/lookup/authors": {
            "get": {
                "tags": [
                    "Lookup"
                ],
                "summary": "Get list of authors",
                "description": "List all authors with pagination.",
                "operationId": "c0efe8bf0d062a63dd51c3d14d061059",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AuthorResource"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/preferences": {
            "get": {
                "tags": [
                    "User Preferences"
                ],
                "summary": "Get the current user's preferences",
                "description": "List the current user's preferences.",
                "operationId": "8fab3ca230c1b2ee4cf34b32b07057d9",
                "responses": {
                    "200": {
                        "description": "List of preferences",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserPreferenceResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User Preferences"
                ],
                "summary": "Update the user's preferences",
                "description": "Update user preferences (remove old ones not in selection, add new ones).",
                "operationId": "1cbe16908c709917bb63982d2756d434",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "preferences"
                                ],
                                "properties": {
                                    "preferences": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "preferable_id",
                                                "preferable_type"
                                            ],
                                            "properties": {
                                                "preferable_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "preferable_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "category",
                                                        "source",
                                                        "author"
                                                    ],
                                                    "example": "category"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "minItems": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Preferences updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Preferences updated successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserPreferenceResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ArticleResource": {
                "title": "Article Resource",
                "description": "Article resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "author": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "title": {
                        "type": "string",
                        "example": "Breaking News: Laravel 12 Released"
                    },
                    "description": {
                        "type": "string",
                        "example": "A brief summary of the article."
                    },
                    "content": {
                        "type": "string",
                        "example": "Full content of the article..."
                    },
                    "image": {
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com/image.jpg"
                    },
                    "source": {
                        "type": "string",
                        "example": "BBC News"
                    },
                    "category": {
                        "type": "string",
                        "example": "World News"
                    },
                    "published_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-15 12:34:56"
                    }
                },
                "type": "object"
            },
            "AuthorResource": {
                "title": "Author Resource",
                "description": "Author data representation",
                "properties": {
                    "id": {
                        "description": "Transform the resource into an array.",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Sucheta Dalal"
                    }
                },
                "type": "object"
            },
            "CategoryResource": {
                "title": "Category Resource",
                "description": "Category data representation",
                "properties": {
                    "id": {
                        "description": "Transform the resource into an array.",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Sports"
                    }
                },
                "type": "object"
            },
            "SourceResource": {
                "title": "Category Resource",
                "description": "Category data representation",
                "properties": {
                    "id": {
                        "description": "Transform the resource into an array.",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "The New York Times"
                    }
                },
                "type": "object"
            },
            "UserPreferenceResource": {
                "properties": {
                    "preferable_type": {
                        "type": "string",
                        "example": "category"
                    },
                    "name": {
                        "type": "string",
                        "example": "Business"
                    }
                },
                "type": "object"
            },
            "NewsArticle": {
                "title": "News Article Model",
                "description": "Represents a news article with various attributes",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "category_id": {
                        "description": "Category ID of the article",
                        "type": "integer",
                        "example": 2
                    },
                    "source_id": {
                        "description": "Source ID of the article",
                        "type": "integer",
                        "example": 3
                    },
                    "author_id": {
                        "description": "Author ID of the article",
                        "type": "integer",
                        "example": 5
                    },
                    "title": {
                        "type": "string",
                        "example": "Breaking News: AI Revolution"
                    },
                    "description": {
                        "type": "string",
                        "example": "A brief description of the article"
                    },
                    "published_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-15T10:00:00Z"
                    },
                    "url_to_image": {
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com/image.jpg"
                    },
                    "content": {
                        "type": "string",
                        "example": "Full content of the article"
                    },
                    "api_source": {
                        "type": "string",
                        "example": "NewsAPI"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "Enter your Sanctum token. \"Bearer\" prefix will be added automatically."
            }
        }
    },
    "tags": [
        {
            "name": "Article Management",
            "description": "API Endpoints for managing articles"
        },
        {
            "name": "Authentication",
            "description": "API Endpoints for User Authentication"
        },
        {
            "name": "Lookup",
            "description": "Endpoints to list available categories, sources and authors"
        },
        {
            "name": "User Preferences",
            "description": "API Endpoints for managing user preferences"
        }
    ]
}